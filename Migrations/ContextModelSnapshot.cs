// <auto-generated />
using EjercicioTaller.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EjercicioTaller.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EjercicioTaller.Models.Desperfecto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManoDeObra")
                        .HasColumnType("int");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VehiculoRefID");

                    b.ToTable("Desperfecto");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Repuesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DesperfectoRefID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DesperfectoRefID");

                    b.ToTable("Repuesto");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Vehiculo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vehiculo");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehiculo");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Automovil", b =>
                {
                    b.HasBaseType("EjercicioTaller.Models.Vehiculo");

                    b.Property<int>("CantidadPuertas")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Automovil");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Moto", b =>
                {
                    b.HasBaseType("EjercicioTaller.Models.Vehiculo");

                    b.Property<int>("Cilindrada")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Moto");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Desperfecto", b =>
                {
                    b.HasOne("EjercicioTaller.Models.Vehiculo", "Vehiculo")
                        .WithMany("Desperfectos")
                        .HasForeignKey("VehiculoRefID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Repuesto", b =>
                {
                    b.HasOne("EjercicioTaller.Models.Desperfecto", "Desperfecto")
                        .WithMany("Repuestos")
                        .HasForeignKey("DesperfectoRefID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desperfecto");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Desperfecto", b =>
                {
                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("EjercicioTaller.Models.Vehiculo", b =>
                {
                    b.Navigation("Desperfectos");
                });
#pragma warning restore 612, 618
        }
    }
}
